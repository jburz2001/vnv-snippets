{
    "CppFile": {
        "scope": "cpp",
        "prefix": "vnv-cpp",
        "body": [
            "using namespace VnV;",
            "",
            "/**",
            "  * @title ${1:ReportTestTitle}",
            "  *",
            "  * ${2:Description of this test in a VnV report.}",
            "  *",
            "  **/",
            "INJECTION_TEST(${3:TestSuite}, ${4:testName}) {",
            "  ",
            "  auto ... = GetRef_NoCheck(\"...\", ...);",
            "  ",
            "  engine->Put(\"...\",...);",
            "  ",
            "  VnV_Debug(${3:TestSuite}, \"GEEEERER %s\", \"sdfsdf\");",
            "  ",
            "  return SUCCESS;",
            "}",
            "",
            "/**",
            "  * @brief",
            "  *",
            "  * @return * Register",
            "  **/",
            "INJECTION_EXECUTABLE(${3:TestSuite})",
            "",
            "/**",
            "  * ${4:TitleOfExample}",
            "  *",
            "  * ${5:Information in example}",
            "  *",
            "  **/",
            "INJECTION_OPTIONS(${3:TestSuite}, \"{}\")",
            "  return NULL;",
            "}",
            "",
            "int main(int argc, char** argv) {",
            "  ",
            "  INJECTION_INITIALIZE(${3:TestSuite}, &argc, &argv, (argc == 2) ? argv[1] : \"./${6:inputfiles/${4:testName}}.json\";",
            "  ",
            "  ${10://code}",
            "  ",
            "  /**",
            "    * @title ${7:InjectionPointTitle}",
            "    *",
            "    * @description ${8:Decsription of injection point.}",
            "    *",
            "    **/",
            "  INJECTION_POINT(${3:TestSuite}, VWORLD, ${9:pointName}, ...);",
            "  ",
            "  INJECTION_FINALIZE(SPNAME);",
            "  ",
            "  return 0;",
            "}",
            "",
        ],
        "description": "Inserts a template to create a cpp file that incorporates VnV macros."
    },
    "INJECTION_TEST" : {
        "scope": "cpp",
        "prefix": ["vnv-test"],
        "body": [
            "/**",
            "  * @title ${1:ReportTestTitle}",
            "  *",
            "  * ${2:Description of this test in a VnV report.}",
            "  *",
            "  **/",
            "INJECTION_TEST(${3:TestSuite}, ${4:testName}) {",
            "  ",
            "  auto ... = GetRef_NoCheck(\"...\", ...);",
            "  ",
            "  engine->Put(\"...\",...);",
            "  ",
            "  VnV_Debug(${3:TestSuite}, \"GEEEERER %s\", \"sdfsdf\");",
            "  ",
            "  return SUCCESS;",
            "}",
            "",
        ],
        "description": "Inserts a VnV INJECTION_TEST."
    },
    "INJECTION_EXECUTABLE" : {
        "scope": "cpp",
        "prefix": ["vnv-exe"],
        "body": [
            "/**",
            "  * @brief",
            "  *",
            "  * @return * Register",
            "  **/",
            "INJECTION_EXECUTABLE(${1:TestSuite})",
            "",
        ],
        "description": "Inserts a VnV INJECTION_TEST."
    },
    "INJECTION_OPTIONS": {
        "scope": "cpp",
        "prefix": ["vnv-options"],
        "body": [
            "/**",
            "  * ${1:TitleOfExample}",
            "  *",
            "  * ${2:Information in example}",
            "  *",
            "  **/",
            "INJECTION_OPTIONS(${3:TestSuite}, \"{}\")",
            "  return NULL;",
            "}",
            "",
        ],
        "description": "Inserts a VnV INJECTION_OPTIONS."
    }, 
    "INJECTION_INITIALIZE": {
        "scope": "cpp",
        "prefix": ["vnv-init"],
        "body": [
                "INJECTION_INITIALIZE(${1:TestSuite}, &argc, &argv, (argc == 2) ? argv[1] : \"./${2:pathToInputJson}\";",
                "",
            ],
        "description": "Inserts a VnV INJECTION_INITIALIZE."
    },
    "INJECTION_POINT": {
        "scope": "cpp",
        "prefix": ["vnv-inject"],
        "body": [
                "INJECTION_POINT(${1:TestSuite}, VWORLD, ${2:pointName}, ...);",
                "",
            ],
        "description": "Inserts a VnV INJECTION_POINT."  
    },
    "INJECTION_FINALIZE": {
        "scope": "cpp",
        "prefix": ["vnv-fin"],
        "body": [
                "INJECTION_FINALIZE(SPNAME);",
                "",
            ],
        "description": "Inserts a VnV INJECTION_FINALIZE."
    },
}